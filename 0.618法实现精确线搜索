import numpy as np
def func(x):
    return pow(x,2)-np.sin(x)
def golds(a0,b0,epision,delta):
    t=(pow(5,0.5)-1)/2
    ar=a0+t*(b0-a0)
    am=b0-t*(b0-a0)#前
    far=func(ar)
    fam=func(am)
    for i in range(100):
        far=func(ar)
        fam=func(am)
        if abs(ar-am)<epision and (far-fam)<delta:
            break
        elif far-fam>0:      
            a0=a0
            b0=ar
            ar=am
            am=b0-t*(b0-a0)
        else:
            b0=b0
            a0=am
            am=ar
            ar=a0+t*(b0-a0)
    print("迭代次数为",i)
    print("极值点为:",(am+ar)/2)
    print("极小值为:",func((am+ar)/2))
def main():    
##a0,b0为左右区间，epision delta自变量与函数变化误差
    a0=0
    b0=1
    epision=1e-5
    delta=1e-4
    golds(a0,b0,epision,delta)           
if __name__=="__main__":
    main()
    
  
